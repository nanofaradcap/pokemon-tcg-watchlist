generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id        String     @id @default(cuid())
  name      String     @unique
  createdAt DateTime   @default(now())
  userCards UserCard[]

  @@map("profiles")
}

model Card {
  id         String       @id @default(cuid())
  name       String
  setDisplay String?
  No         String?
  rarity     String?
  imageUrl   String?
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  sources    CardSource[]
  userCards  UserCard[]

  @@index([name])
  @@index([No])
  @@index([name, No])
  @@map("cards")
}

model CardSource {
  id            String         @id @default(cuid())
  cardId        String
  sourceType    String
  url           String
  productId     String?
  currency      String         @default("USD")
  lastCheckedAt DateTime?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  prices        CardPrice[]
  card          Card           @relation(fields: [cardId], references: [id], onDelete: Cascade)
  priceHistory  PriceHistory[]

  @@unique([cardId, sourceType])
  @@index([cardId])
  @@index([sourceType])
  @@map("card_sources")
}

model CardPrice {
  id        String     @id @default(cuid())
  sourceId  String
  priceType String
  price     Decimal    @db.Decimal(10, 2)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  source    CardSource @relation(fields: [sourceId], references: [id], onDelete: Cascade)

  @@unique([sourceId, priceType])
  @@index([sourceId])
  @@index([priceType])
  @@map("card_prices")
}

model PriceHistory {
  id        String     @id @default(cuid())
  sourceId  String
  priceType String
  oldPrice  Decimal?   @db.Decimal(10, 2)
  newPrice  Decimal?   @db.Decimal(10, 2)
  changedAt DateTime   @default(now())
  source    CardSource @relation(fields: [sourceId], references: [id], onDelete: Cascade)

  @@index([sourceId])
  @@index([changedAt])
  @@map("price_history")
}

model UserCard {
  id        String   @id @default(cuid())
  userId    String
  cardId    String
  createdAt DateTime @default(now())
  card      Card     @relation(fields: [cardId], references: [id], onDelete: Cascade)
  user      Profile  @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, cardId])
  @@index([userId])
  @@index([cardId])
  @@map("user_cards")
}
